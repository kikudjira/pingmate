name: YouTrack Issue Linker

on:
  pull_request:
    types: [opened, edited]

jobs:
  post-youtrack-link:
    runs-on: ubuntu-latest
    
    permissions:
      pull-requests: write

    steps:
      - name: Link YouTrack Issue
        uses: actions/github-script@v7
        with:
          script: |
            const YOUTRACK_URL = "https://YOUR-DOMAIN.youtrack.cloud";
            const PROJECT_PREFIXES = ["FUN", "DDD", "FFB", "DOC"]; 

            const pr = context.payload.pull_request;
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            // --- 1. Find the new issue ID in the PR title ---
            const prefixesPattern = PROJECT_PREFIXES.join('|');
            const regex = new RegExp(`((${prefixesPattern})-\\d+)`);
            const titleMatch = pr.title.match(regex);
            const newIssueId = titleMatch ? titleMatch[0] : null;

            // --- 2. Find the bot's existing comment ---
            const { data: comments } = await github.rest.issues.listComments({
              owner,
              repo,
              issue_number: pr.number,
            });

            const botComment = comments.find(comment => 
              comment.user.login === 'github-actions[bot]' && 
              comment.body.includes('**YouTrack Issue:**')
            );

            // --- 3. Decide what to do ---

            if (newIssueId) {
              // A task ID was found in the title
              const newBody = `ðŸ”— **YouTrack Issue:** [${newIssueId}](${YOUTRACK_URL}/issue/${newIssueId})`;

              if (botComment) {
                // Bot comment already exists, check if it needs an update
                if (botComment.body !== newBody) {
                  await github.rest.issues.updateComment({
                    owner,
                    repo,
                    comment_id: botComment.id,
                    body: newBody,
                  });
                  console.log(`Updated comment with a link to issue ${newIssueId}`);
                } else {
                  console.log(`Comment is already up-to-date with issue ${newIssueId}`);
                }
              } else {
                // No bot comment found, create a new one
                await github.rest.issues.createComment({
                  owner,
                  repo,
                  issue_number: pr.number,
                  body: newBody,
                });
                console.log(`Created a new comment with a link to issue ${newIssueId}`);
              }
            } else if (botComment) {
              // No task ID in the title, but a bot comment exists. Let's delete it.
              await github.rest.issues.deleteComment({
                owner,
                repo,
                comment_id: botComment.id,
              });
              console.log("Removed the outdated YouTrack link comment.");
            } else {
              // No task ID in the title, and no bot comment to clean up. Do nothing.
              console.log("No YouTrack issue ID in the title and no existing comment to manage.");
            }
